{{>header}}
<style>
    /* 그리드 레이아웃 */
    .grid {
        display: grid;
        width: 85%;
        height: 80%;
        grid-template-columns: repeat(2, 1fr); /* 2열 레이아웃 */
        gap: 15px;
    }

    /* 카드 스타일 */
    .card {
        background-color: #FFFFFF;
        padding: 10px;
        width: 100%;
        height: 100%;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .card h2 {
        margin-top: 0;
    }

    .card textarea {
        width: 100%;
        height: 100px; /* 기본 높이 */
        resize: none; /* 크기 조정 비활성화 */
        overflow-y: auto; /* 세로 스크롤 활성화 */
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 8px;
        font-size: 1rem;
    }


    /* 공통 링크 스타일 */
    .card ul {
        list-style: none;
        padding: 0;
    }

    .card a {
        text-decoration: none;
        color: black;
    }

    .card a:hover {
        text-decoration: underline;
    }

    .card.disabled {
        background-color: #9294a5; /* 회색 */
        pointer-events: none; /* 클릭 불가능 */
        opacity: 0.6; /* 불투명도 감소 */
    }

    .add-button {
        background-color: #FB9C1F;
        color: white;
        border: none;
        padding: 5px 10px;
        font-size: 1.2rem;
        cursor: pointer;
    }


    /* 분석 제목 */
    .analyzeTitle {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 85%;
    }
    .analyzeEnd {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        width: 85%;
        margin-top: 10px;
    }

    .content-wrapper {
        display: flex;
        justify-content: space-between; /* 양쪽 끝에 배치 */
        align-items: center;
    }
    .analyzeEnd2 {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        margin-top: 10px;
        width: 90%;
        z-index: 3;
    }

    .btnOne {
        background-color: #576096;
        color: white;
        border: none;
        padding: 5px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Score6', sans-serif;
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease; /* 호버 효과 및 애니메이션 */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
    }
    .btnAll {
        background-color: #F19B2A;
        color: white;
        border: none;
        padding: 5px 20px;
        font-size: 20px;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Score6', sans-serif;
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease; /* 호버 효과 및 애니메이션 */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
    }
    .resultTitle{
        font-family: 'Score5', sans-serif;
    }

    .testCard {
        width: 100%;
        height: 100%;
        max-height: 200px; /* 최대 높이 설정 */
        overflow-y: auto; /* 세로 스크롤 활성화 */
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 8px;
        font-size: 1rem;
        background-color: #fff; /* 배경색 추가 */
    }
    .question {
        margin-bottom: 20px;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

    .question h3 {
        margin-top: 0;
    }

    .choices {
        margin: 10px 0;
    }

    .choices label {
        display: block;
        margin: 5px 0;
    }

</style>

<div id="back_ground2">
    <div class="analyzeTitle">
        <img src="/images/analyzeTitle.svg" style="height: 50%;display: inline-block; margin-bottom: 15px;"/>

        <select  style="background-color: #FFFEFD;
                        opacity: 0.9;
                        border: 1px solid #ddd;
                        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                        width: 200px;
                        border-radius: 5px;
                        font-family: 'Score5', sans-serif;">
            {{#subject}}
                <option value="{{id}}">{{subject}} | {{grade}}학년 {{divClass}}분반</option>
            {{/subject}}
        </select>
    </div>
    <div class="grid">
        <!-- STT(Speech to Text) -->
        <div class="card">
            <div class="content-wrapper">
                <h2 class="resultTitle">STT(Speech to Text)</h2>
            </div>

            <textarea style="height: 100%" placeholder="음성 텍스트 변환 결과입니다.">{{stt}}</textarea>
        </div>
        {{#response}}
        <div class="card" id = "noticeCard">
            <div class="content-wrapper">
                <h2 class="resultTitle">공지사항</h2>
                <button class="btnOne" onclick="submitData('notice')">등록</button>
            </div>
            <textarea style="height: 100%" placeholder="공지사항 내역입니다.">{{notice}}</textarea>
            <input id="file" type="file" class="form-control" name="file">
        </div>

        <div class="card" id="summaryCard">
            <div class="content-wrapper">
                <h2 class="resultTitle">수업 요약</h2>
                <button class="btnOne" onclick="submitData('summary')">등록</button>
            </div>

            <textarea style="height: 100%" placeholder="요약된 수업 내용입니다.">{{class_summary}}</textarea>
        </div>

        <div class="card" id="testCard">
            <div class="content-wrapper">
                <h2 class="resultTitle">시험</h2>
                <button class="btnOne" onclick="submitData('test')">등록</button>
            </div>
            {{#quiz}}
                <div class="testCard" style="height: 100%">
                    {{#questions}}
                        <div class="question">
                            <p style="font-weight: bold">문제: {{question}}</p>
                            <div class="choices">
                                {{#choices}}
                                    <label>
                                        <input type="radio" name="answer_{{question}}" value="{{.}}" />
                                        {{.}}
                                    </label>
                                {{/choices}}
                                <p>정답: <span class="correct-answer" data-answer="{{correct_answer}}"></span></p>
                                {{explanation}}
                            </div>
                        </div>
                    {{/questions}}
                </div>

            {{/quiz}}
        </div>
        {{/response}}
    </div>
    <div class="analyzeEnd">
        <button class="btnAll" onclick="clickAll()">한 번에 등록</button>
    </div>

    <div class="analyzeEnd2">
        <img src="/images/analyzeEnd.svg" />
    </div>
    <div style="width: 100%;height: 3%;background-color:#472A00;margin-bottom: 0">

    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const answers = document.querySelectorAll(".correct-answer");
        answers.forEach(answer => {
            const value = parseInt(answer.getAttribute("data-answer"), 10) + 1;
            answer.textContent = value;
        });
    });

    function submitData(type) {
        let formData = new FormData();

        // 공지사항일 때
        if (type === 'notice') {
            const content = document.querySelector('.grid .card textarea[placeholder="공지사항 내역입니다."]').value;
            const subjectId = document.querySelector('select').value;
            const fileInput = document.querySelector('#noticeCard input[type="file"]');
            const files = fileInput.files;

            formData.append('content', content);
            formData.append('subjectId', subjectId);

            if (files.length > 0) {
                for (let i = 0; i < files.length; i++) {
                    formData.append('files', files[i]);
                }
            }
        }
        // 수업요약일 때
        else if (type === 'summary') {
            const content = document.querySelector('.grid .card textarea[placeholder="요약된 수업 내용입니다."]').value;
            const subjectId = document.querySelector('select').value;

            formData.append('content', content);
            formData.append('subjectId', subjectId);
        }
        // 시험일 때
        else if (type === 'test') {
            const subjectId = document.querySelector('select').value;
            let questions = [];
            document.querySelectorAll('.testCard .question').forEach(questionElem => {
                let questionText = questionElem.querySelector('p').innerText.replace('문제: ', '');
                let selectedAnswer = questionElem.querySelector('input:checked') ? questionElem.querySelector('input:checked').value : null;
                questions.push({ question: questionText, selectedAnswer: selectedAnswer });
            });

            formData.append('subjectId', subjectId);
            formData.append('questions', JSON.stringify(questions));
        }

        const confirmed = confirm(`${type === 'notice' ? '공지사항' : type === 'summary' ? '수업 요약' : '시험'}을 등록하시겠습니까?`);
        if (confirmed) {
            // POST 요청
            fetch(`/board/${type}`, {
                method: 'POST',
                body: formData
            })
                    .then(response => {
                        if (response.ok) {
                            if (type === 'notice') {
                                alert("공지사항이 성공적으로 등록되었습니다!");
                                document.getElementById('noticeCard').classList.add('disabled');
                            } else if (type === 'summary') {
                                alert("수업요약이 성공적으로 등록되었습니다!");
                                document.getElementById('summaryCard').classList.add('disabled');
                            } else if (type === 'test') {
                                alert("시험이 성공적으로 등록되었습니다!");
                                document.getElementById('testCard').classList.add('disabled');
                            }
                        } else {
                            alert(`${type === 'notice' ? '공지사항' : type === 'summary' ? '수업 요약' : '시험'} 등록에 실패했습니다.`);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('오류가 발생했습니다. 다시 시도해주세요.');
                    });
        }
    }

    function clickAll() {
        let urls = {
            notice: '/board/notice',
            summary: '/board/summary',
            test: '/board/test'
        };

        let formDataList = [];

        // 공지사항 데이터 추가
        if (!document.getElementById('noticeCard').classList.contains('disabled')) {
            let formData = new FormData();
            const content = document.querySelector('#noticeCard textarea').value;
            const subjectId = document.querySelector('select').value;
            const fileInput = document.querySelector('#noticeCard input[type="file"]');
            const files = fileInput.files;

            formData.append('content', content);
            formData.append('subjectId', subjectId);

            if (files.length > 0) {
                for (let i = 0; i < files.length; i++) {
                    formData.append('files', files[i]);
                }
            }

            formDataList.push({ url: urls.notice, data: formData, cardId: 'noticeCard' });
        }

        // 수업 요약 데이터 추가
        if (!document.getElementById('summaryCard').classList.contains('disabled')) {
            let formData = new FormData();
            const content = document.querySelector('#summaryCard textarea').value;
            const subjectId = document.querySelector('select').value;

            formData.append('content', content);
            formData.append('subjectId', subjectId);

            formDataList.push({ url: urls.summary, data: formData, cardId: 'summaryCard' });
        }

        // 시험 데이터 추가
        if (!document.getElementById('testCard').classList.contains('disabled')) {
            let formData = new FormData();
            const subjectId = document.querySelector('select').value;
            let questions = [];
            document.querySelectorAll('#testCard .question').forEach(questionElem => {
                let questionText = questionElem.querySelector('p').innerText.replace('문제: ', '');
                let selectedAnswer = questionElem.querySelector('input:checked') ? questionElem.querySelector('input:checked').value : null;
                questions.push({ question: questionText, selectedAnswer: selectedAnswer });
            });

            formData.append('subjectId', subjectId);
            formData.append('questions', JSON.stringify(questions));

            formDataList.push({ url: urls.test, data: formData, cardId: 'testCard' });
        }

        // 각 데이터 POST 요청 처리
        formDataList.forEach(item => {
            fetch(item.url, {
                method: 'POST',
                body: item.data
            })
                    .then(response => {
                        if (response.ok) {
                            alert(`${item.url === urls.notice ? '공지사항' : item.url === urls.summary ? '수업 요약' : '시험'}이 성공적으로 등록되었습니다!`);
                            document.getElementById(item.cardId).classList.add('disabled');
                        } else {
                            alert(`${item.url === urls.notice ? '공지사항' : item.url === urls.summary ? '수업 요약' : '시험'} 등록에 실패했습니다.`);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('오류가 발생했습니다. 다시 시도해주세요.');
                    });
        });
    }
</script>
{{>footer}}
