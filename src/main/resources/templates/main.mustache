{{>header}}



<link rel="stylesheet" href="/css/main1.css">
<div id="back_ground">
    <div style="width: 100%;max-width: 1300px; height: auto; margin: 0 auto;">
        <div class="popup" id="popup">
            <div style="background-color:#576096; width: 100%; height: 10%; color: white; font-family: Hakgyo; font-size: 25px; display: flex; align-items: center; padding: 10px;">
                수업 추가
            </div>
            <div style="display: flex; justify-content: center; width: 100%; padding-bottom: 60px;">
                <form id="classForm" method="POST" action="/teacher/classDelete" style="padding: 10px; width: 80%; font-family: Score5; font-size: 20px">

                    <!-- 수업 코드 입력 필드 -->
                    <div style="display: flex; align-items: center; margin-bottom: 10px;">
                        <input type="text" id="classCodeInput" placeholder="수업 코드를 입력하세요"
                               style="width: 100%; padding: 8px; font-size: 16px; border: 1px solid #ccc; border-radius: 5px;">
                        <button type="button" onclick="searchClass()" class="btnSearch">
                            검색
                        </button>
                    </div>

                    <!-- 검색된 수업 정보 표시 -->
                    <div id="classInfo" style="display: none; padding: 10px; border: 1px solid #ddd; border-radius: 5px; margin-bottom: 10px;">
                        <p id="classDetails" style="margin: 0; font-size: 18px; font-weight: bold;"></p>
                        <button type="button" onclick="addToCart({{member.id}})" style="margin-top: 5px; padding: 5px 10px; background: #2ecc71; color: white; border: none; border-radius: 5px; cursor: pointer;">
                            장바구니에 담기
                        </button>
                    </div>

                    <!-- 장바구니 리스트 -->
                    <ul id="cartList"></ul>
                </form>
            </div>

            <!-- 버튼 영역을 하단에 고정 -->
            <div style="position: absolute; bottom: 0; width: 100%; background: white; padding: 10px; display: flex; align-items: center; justify-content: flex-end; border-top: 1px solid #ddd;">
                <button type="button" id="deleteClosePopup" class="btnAll" onclick="popupClose()">취소</button>
                <button type="button" class="btnAll" style="margin-left: 15px; background: #EB6319;" onclick="submitCart()">저장하기</button>
            </div>
        </div>

        <div style="display: flex; justify-content: flex-start; width: 100%; padding: 0; margin: 0;">
            <div id="text" class="title">🏠 Home</div>
        </div>
        <!-- 학교 및 선생님 정보 -->
        <div class="container">
            <div class="info-box">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <h2 style="margin: 0 0 10px 0;font-size: 1.3em;font-weight: bold; color: #576096;font-family: Hakgyo">학교 & 학급 정보</h2>
                    {{^isTeacher}}
                    <button onclick="confirmChange('{{member.id}}')"
                            style="background-color: #576096; color: white; border: none;font-family: Score4;
                            border-radius: 5px; cursor: pointer; display: flex; justify-content: center; align-items: center;
                            text-align: center; padding: 5px;font-size: 13px; margin-bottom: 5px;">
                        재설정
                    </button>
                    {{/isTeacher}}
                </div>
                <div class="info-content" >
                    <p style="font-size: 1.2em; font-weight: bold; color: #333;">🏫 {{member.school}}</p>
                    <p style="font-size: 1.2em; font-weight: bold; color: #333;">🪪{{member.schoolgrade}}학년 {{member.schoolClass}}반</p>
                </div>
            </div>

            <div class="info-box">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <h2 style="margin: 0 0 10px 0;font-size: 1.3em;font-weight: bold; color: #576096;font-family: Hakgyo">담임 선생님 정보</h2>
                </div>

                <div class="info-content">
                    <img class="profile"
                         id="profile_Image"
                         src=" {{teacherInfo.img_path}}"
                         onerror="this.src='/blank_profile/blank_profile.svg';" />
                    <div class="info" style="position: relative;left:4vw;">
                    <p style="font-size: 1.2em; font-family: Score6; color: #333; ">성함 : {{teacherInfo.name}}</p>
                    <p style="font-size: 1.2em;  font-family: Score6; color: #333; ">전화번호 : 0{{teacherInfo.phoneNumber}}</p>
                    </div>

                </div>
            </div>
        </div>

        <!-- 게시판 -->
        <div class="grid">
            <!-- 수업 게시판 -->
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <h2 style="margin: 0 0 10px 0;font-size: 1.3em;font-weight: bold; color: #576096;font-family: Hakgyo">수강 목록</h2>
                </div>
                <div class="scroll-container" id="scrollContainer">
                {{#subjects}}
                    <div class="scroll-card">
                        {{^isTeacher}}
                        <button class="delete-btn" onclick="deleteClass('{{id}}')">✕</button>
                        {{/isTeacher}}
                        <h4 style="font-family: Score8">{{subject}}</h4>
                        <p style="font-family: Score5">{{grade}}학년 {{divClass}}분반</p>
                        <br>
                        <p style="font-family: Score5">담당 선생님 : {{teacher.name}}</p>
                        <a style="font-size: 15px; font-family: Score4" href="/board/noticeList?id={{id}}">과목 게시판으로 이동-></a>
                    </div>
                {{/subjects}}
                {{^subjects}}
                    <div class="scroll-card"><a href="#">과목 등록을 해보세요! </a></div>
                {{/subjects}}
                {{^isTeacher}}
                    <div class="scroll-card" onclick="popup()" style="cursor:pointer;"><h1>&#43</h1></div>
                {{/isTeacher}}
                </div>
            </div>

            <!-- 우리반 소식 -->
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <h2 style="text-align: left; margin: 0;">우리반 커뮤니티</h2>
                    <button onclick="location.href='/myClass/list?id={{member.teacherCode}}'"
                    style="background-color: #576096; color: white; border: none;font-family: Score4;
                    border-radius: 5px; cursor: pointer; display: flex; justify-content: center; align-items: center;
                    text-align: center; padding: 5px;font-size: 13px;">
                    목록 보기
                    </button>
                </div>
                <ul class="cardIn">
                    {{#classBoard}}
                        <li onclick="location.href='/myClass?id={{member.teacherCode}}&num={{id}}'" class="clickable">
                            <span class="title-text">{{title}}</span>
                            <span class="date-text">{{updated}}</span>
                        </li>
                    {{/classBoard}}
                    {{^classBoard}}
                        <li class="empty">
                            <span class="title-text">우리반 커뮤니티가 비어있습니다.</span>
                        </li>
                    {{/classBoard}}
                </ul>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const scrollContainer = document.getElementById("scrollContainer");

        scrollContainer.addEventListener("wheel", function (event) {
            event.preventDefault();
            scrollContainer.scrollLeft += event.deltaY * 2; // 마우스 휠 속도 조절 (2배 빠르게)
        });

        var fileName = "{{teacherInfo.img_path}}";

        fetch("/signed-url?fileName=" + encodeURIComponent(fileName))   //특수문자 같은거 인코딩
                .then(response => response.text())
                .then(url => {
                    document.getElementById("profile_Image").src = url;
                })
                .catch(error => console.error("Error loading image:", error));


    });

    function popup(){
        document.getElementById('popup').style.display = 'block';
    }
    let cart = []; // 장바구니 배열

    // 수업 검색 AJAX
    function searchClass() {
        const classCode = document.getElementById("classCodeInput").value.trim();
        if (!classCode) return;

        fetch(`/myClass/find?code=${classCode}`)
                .then(response => response.json())
                .then(data => {
                    if (data) {
                        document.getElementById("classDetails").innerHTML = `
                           <span style="font-weight: bold;">수업명: ${data.subject} (코드: ${data.id})</span><br>
                           <span>${data.grade}학년 ${data.divClass}분반 | 교사: ${data.teacherName}</span>`;

                        document.getElementById("classInfo").style.display = "block";
                        document.getElementById("classInfo").dataset.classId = data.id; // 숨겨진 ID 저장
                    }
                })
                .catch(error => console.error("Error:", error));
    }

    // 장바구니 추가
    function addToCart(memberId) {
        const classId = document.getElementById("classInfo").dataset.classId;
        const classDetails = document.getElementById("classDetails").textContent;

        // 중복 확인 (classId가 같은 데이터가 있으면 추가 X)
        if (!cart.some(item => item.classId === classId)) {
            cart.push({ classId, memberId });

            const listItem = document.createElement("li");
            listItem.style.display = "flex";
            listItem.style.justifyContent = "space-between";
            listItem.style.padding = "10px";
            listItem.style.borderBottom = "1px solid #ddd";

            listItem.innerHTML = `
            <span>${classDetails}</span>
            <button type="button" onclick="removeFromCart('${classId}', this)"
                style="background: red; color: white; border: none; padding: 3px 6px; cursor: pointer;
                border-radius: 15%; font-size: 12px; width: 20px; height: 20px;
                display: flex; align-items: center; justify-content: center;">
                ✕
            </button>
        `;

            document.getElementById("cartList").appendChild(listItem);
            document.getElementById("cartList").style.display = "block";
        }
    }

    // 장바구니 삭제
    function removeFromCart(classId, button) {
        cart = cart.filter(item => item.classId !== classId);
        button.parentElement.remove();

        if (cart.length === 0) {
            document.getElementById("cartList").style.display = "none";
        }
    }

    // 장바구니 저장
    function submitCart() {
        if (cart.length === 0) {
            alert("장바구니에 담긴 수업이 없습니다.");
            return;
        }

        fetch("/myClass/classSave", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(cart)
        })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        alert(data.message); // 서버에서 받은 메시지를 alert에 표시
                    } else {
                        alert("응답 오류: 서버에서 메시지를 받지 못했습니다.");
                    }
                    location.reload();
                })
                .catch(error => console.error("Error:", error));
    }

    // 팝업 닫기
    function popupClose() {
        document.getElementById("popup").style.display = "none";
        document.getElementById("classCodeInput").value = "";
        document.getElementById("classInfo").style.display = "none";
        document.getElementById("cartList").innerHTML = "";
        document.getElementById("cartList").style.display = "none";
        cart = [];
    }

    function deleteClass(classId) {
        if (!confirm("해당 과목을 삭제하시겠습니까?")) {
            return;
        }

        const memberId = {{member.id}};  // 서버에서 받아오는 member ID

        fetch("/myClass/delete", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ memberId, classId })
        })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);  // 서버에서 받은 메시지 표시
                    location.reload();    // 페이지 새로고침
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("삭제 실패! 다시 시도해주세요.");
                });
    }

    function confirmChange(code) {
        if (confirm("🚨[주의]\n현재 학급 정보를 초기화 후 재설정 하시겠습니까? \n확인 버튼을 누를 시 수강 목록 또한 초기화 됩니다.")) {
            fetch('/teacher/studentDel', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: new URLSearchParams({ studentId: code })
            })
                    .then(response => {
                        if (response.ok) {
                            alert("초기화 되었습니다. 새로운 학급 코드를 입력해 주세요!");
                            location.reload(); // 페이지 새로고침
                        } else {
                            alert("초기화에 실패하였습니다.");
                        }
                    })
                    .catch(error => {
                        console.error("오류 발생:", error);
                        alert("서버 오류가 발생했습니다.");
                    });
        }
    }
</script>
{{>footer}}