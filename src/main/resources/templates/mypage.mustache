{{>header}}
<style>
    .ai-020,
    .ai-020 * {
        box-sizing: border-box;
    }
    .ai-020 {
        background: #fcf2d4;
        height: 50vw;
        position: relative;
        overflow: hidden;
    }

    .main-box {
        border-radius: 30px;
        background: #F6E1A0;
        font-family: "Score6", sans-serif;
        font-size: 1.3vw;
        border-width: 0.2vw;
        width: 80vw;  /* 너비를 vw로 설정 */
        height: 26vw;  /* 높이를 vh로 설정 */
        left: 10vw;  /* 좌측 위치를 vw로 설정 */
        top: 5vw;    /* 상단 위치를 vh로 설정 */
        position: absolute;
        display: flex;
        flex-direction: column; /* 세로로 정렬 */
        justify-content: flex-start;  /* 위에서부터 정렬 */
        align-items: center;  /* 가로 중앙 정렬 */
        box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
        overflow-y: auto;
        padding-top: 2vh; /* 상단 여백을 vh로 설정 */
    }

    .btlogin
    {
        font-size: 1.3vw;
        text-decoration: none; /* 밑줄 없애기 */
        color: inherit;        /* 텍스트 색상을 부모 요소의 색상으로 상속 */
        left: 17vw;
        top: 53vw;
    }
    .back-btn{
        color:#908282;
        font-size: 1.3vw;
        text-decoration: none; /* 밑줄 없애기 */
        left: 2vw;
        top: 46vw;
        position: absolute;
    }
    .profile
    {
        height: 20vw;
        width: 20vw;
        border: 0.3vw solid #1E2D84;
        left:7vw;
        top:3vw;
        position:absolute;
        border-radius: 50%;
    }
    .file-div
    {
        position:absolute;
        left:0vw;
        top:0vw;
    }
    .file-select{
        position: absolute;
        font-size: 1.5vw;
        outline: none;
        border: 1px solid #E68E1B;
        font-family: "SCore5", sans-serif;
        background-color: #E68E1B;
        color: white;
        border-radius: 50px;       /* 둥근 테두리 설정 */
        width: 3.5vw;
        height: 3.5vw;
        left: 22vw;
        top: 18vw;
        z-index: 2;
    }
    .sub-box{
        border-radius: 10px;
        background: #FFFFFF;
        font-family: "Score6", sans-serif;
        color:#4B4B4B;
        font-size: 1.3vw;
        border-width: 0.2vw;
        width: 30vw;  /* 너비를 vw로 설정 */
        height: 13vw;  /* 높이를 vh로 설정 */
        left: 40vw;  /* 좌측 위치를 vw로 설정 */
        top: 10vw;    /* 상단 위치를 vh로 설정 */
        position: absolute;
        display: flex;
        flex-direction: column; /* 세로로 정렬 */
        justify-content: flex-start;  /* 위에서부터 정렬 */
        align-items: center;  /* 가로 중앙 정렬 */
        box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
        overflow-y: auto;
        padding-top: 2vh; /* 상단 여백을 vh로 설정 */
    }
    .name{
        position:absolute;
        left:40vw;
        color:#4B4B4B;
        top:2vw;
        font-family: "SCore5", sans-serif;
        font-size:5vw;
    }
    .info{
        position:absolute;
        left: 5vw;
        top:2.5vw;
    }
    .emo{
        height:2vw;
        width:2vw;
    }
    .Counsel-btn{
        position: absolute;
        left:70vw;
        top:35vw;
        background: #f19b2a;
        border-radius: 30px;
        border-style: solid;
        border-color: #576096;
        border-width: 7px;
        width: 15vw;
        height: 8vh;
        font-family: "Score6", sans-serif;
        font-size:1.5vw;
        display: flex; /* 플렉스 박스 활성화 */
        justify-content: center; /* 수평 중앙 정렬 */
        align-items: center; /* 수직 중앙 정렬 */
        text-decoration: none; /* 밑줄 제거 */
        font-weight: bold;
        color: white;

    }
    .popup {
        display: none; /* 숨겨진 상태로 시작 */
        position: fixed;
        width: 30%;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        z-index: 1000;
    }
    .openPopup{
        position: absolute;
        left:52vw;
        top:35vw;
        background: #f19b2a;
        border-radius: 30px;
        border-style: solid;
        border-color: #576096;
        border-width: 7px;
        width: 15vw;
        height: 8vh;
        font-family: "Score6", sans-serif;
        font-size:1.5vw;
        display: flex; /* 플렉스 박스 활성화 */
        justify-content: center; /* 수평 중앙 정렬 */
        align-items: center; /* 수직 중앙 정렬 */
        text-decoration: none; /* 밑줄 제거 */
        font-weight: bold;
        color: white;
    }
    .overlay {
        display: none; /* 숨겨진 상태로 시작 */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }
    .btnAll {
        background-color: #F19B2A;
        color: white;
        border: none;
        padding: 5px 20px;
        font-size: 20px;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Score6', sans-serif;
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease; /* 호버 효과 및 애니메이션 */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
    }
    .btnAdd {
        background-color: #F19B2A;
        color: white;
        border: none;
        padding: 5px 20px;
        font-size: 20px;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Score6', sans-serif;
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease; /* 호버 효과 및 애니메이션 */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
    }
</style>


<div class="ai-020">

        <a target="_self" id="back-btn" class="back-btn"  href="/teacher"><<< 뒤로가기</a>

    <div class="popup" id="popup">
        <div style="background-color:#576096; width: 100%; height: 10%; color: white; font-family: Hakgyo; font-size: 25px; display: flex; align-items: center; padding: 10px;">
            수업 추가
        </div>
        <div style="display: flex; justify-content: center; width: 100%;">
            <form method="POST" action="/member/mypage/classAdd" oninput="return validateForm()" style="padding: 10px; width: 80%; font-family: Score5; font-size: 20px;">

                <label for="subject">과목 코드</label>
                <input id="subject" name="subject" maxlength="5" style="width: 100%;
                   border: 1px solid #ddd;
                   box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                   margin-bottom: 10px;
                   border-radius: 5px;
                   font-family: 'Score5', sans-serif;"
                       placeholder="과목 추가"
                />
                <div id="codeError" class="text-danger" style="font-size: 1vw; display: none;">영어와 숫자 혼합(5자리)(대소문자 구분)</div>

                <div style="display: flex; align-items: center; justify-content: flex-end; margin-top: 15px; margin-bottom: 15px;">
                    <button type="button" id="closePopup" class="btnAll">취소</button>
                    <button type="submit" class="btnAdd" id="btnAdd" style="margin-left: 15px;">추가</button>
                </div>
            </form>
        </div>
    </div>



    <div class="main-box" >
        {{#member}}
            <img class="profile"
                 src=" {{img_path}}"
            onerror="this.src='/blank_profile/blank_profile.svg';" />
        <div class="sub-box" >
            <div class="info">
                <p class="school"><img class="emo" src="/images/school-emo.svg"> 학교 : {{school}}</p>
                <p class="class"><img class="emo" src="/images/class-emo.svg"> 반 번호 : {{schoolClass}}반</p>
                <p class="phone"><img class="emo" src="/images/phone-emo.svg"> 전화번호 : 0{{phoneNumber}}</p>
            </div>
        </div>
        <div class="file-div">
            <input type="file" id="fileInput" style="display: none;">
            <button class="file-select" id="uploadButton1">+</button>
        </div>
        <div class="name">{{name}} 님</div>
            <input type="hidden" value="{{id}}">
        {{/member}}
    </div>

    {{#teacher}}
    {{#member}}
        <a target="_self" href="/teacher/student_recode" class="Counsel-btn">상담내역 확인</a>
    {{/member}}
    {{/teacher}}


    {{#st}}
        {{#member}}
            <a target="_self" href="/teacher/student_recode/{{id}}" class="Counsel-btn">상담내역 확인</a>
            <button type="button" id="openPopup" class="openPopup">과목추가</button>
        {{/member}}
    {{/st}}
    </div>



<script>
    function validateForm() {

        //아이디 유효성
        var code = document.getElementById("subject").value;
        var coderegex = /^[A-Za-z0-9]{5}$/; //정규식 5자리 영어 + 숫자
        var codeerrorMessage = document.getElementById("codeError");

        if (!coderegex.test(code)) {
            codeerrorMessage.style.display = "block"; // 에러
            document.getElementById("btnAdd").disabled = true; // 제출 버튼 비활성화
            return false;
        } else {
            codeerrorMessage.style.display = "none"; // 에러 x
        }

        document.getElementById("btnAdd").disabled = false;
        return true;
    }

    document.getElementById('openPopup').addEventListener('click', function() {
        document.getElementById('popup').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
    });

    document.getElementById('closePopup').addEventListener('click', function() {
        document.getElementById('popup').style.display = 'none';
        document.getElementById('overlay').style.display = 'none';
    });

    document.getElementById('overlay').addEventListener('click', function() {
        document.getElementById('popup').style.display = 'none';
        this.style.display = 'none';
    });

    function toggleButtons(item) {
        const hiddenButtons = item.querySelector('.hidden-buttons'); // 클릭한 아이템 내의 hidden-buttons 찾기
        const backDiv = item; // 클릭한 아이템을 backDiv로 사용

        if (hiddenButtons.style.display === 'none' || hiddenButtons.style.display === '') {
            hiddenButtons.style.display = 'flex';
            backDiv.style.backgroundColor = '#B0B7E2';  // 클릭한 아이템 배경색 변경
        } else {
            hiddenButtons.style.display = 'none';
            backDiv.style.backgroundColor = '#ffffff';  // 다시 배경색 원래대로
        }
    }

    function update(element) {
        // 클릭된 아이템에서 값 추출
        var item = element.closest('.item');  // 클릭된 item을 찾아서
        var textContent = item.querySelector('p').innerText;
        var classCodeText = item.querySelector('#classCode').innerText;  // 해당 아이템 내의 classCode를 참조
        var classCode = classCodeText.split(":")[1].trim();
        var subject = textContent.match(/\[([^\]]+)\]/)[1]; // [물리]에서 물리 추출
        var grade = textContent.match(/(\d+)학년/)[1]; // 1학년에서 1 추출
        var divClass = textContent.match(/(\w+)분반/)[1];

        console.log(classCode);
        console.log(subject);
        console.log(grade);
        console.log(divClass);
        // 팝업의 입력 필드에 디폴트 값 설정
        document.getElementById('updateCodeTitle').textContent = classCode;
        document.getElementById('updateCode').value = classCode;
        document.getElementById('updateGrade').value = grade;
        document.getElementById('updateClass').value = divClass;
        document.getElementById('updateSubject').value = subject;

        // 팝업 표시
        document.getElementById('updatePopup').style.display = 'block';
    }

    function updateClose(){
        document.getElementById('updatePopup').style.display = 'none';
    }

    function deleteClass(element) {
        // 클릭된 아이템에서 값 추출
        var item = element.closest('.item');  // 클릭된 item을 찾아서
        var classCodeText = item.querySelector('#classCode').innerText;  // 해당 아이템 내의 classCode를 참조
        var classCode = classCodeText.split(":")[1].trim();  // 수업 코드를 추출

        // 팝업의 입력 필드에 디폴트 값 설정
        document.getElementById('deleteCode').value = classCode;

        // 팝업 표시
        document.getElementById('deletePopup').style.display = 'block';
    }

    function deleteClose(){
        document.getElementById('deletePopup').style.display = 'none';
    }




    document.addEventListener("DOMContentLoaded", function() {
        const profileImage = document.querySelector('.profile');
        const currentTimestamp = new Date().getTime(); // 현재 타임스탬프
        const imgPath = profileImage.src.split('?')[0]; // 기존 이미지 URL에서 쿼리 파라미터 제거
        profileImage.src = `${imgPath}?t=${currentTimestamp}`; // 새로운 타임스탬프 추가

    });

    const fileInput = document.getElementById('fileInput');
    const uploadButton = document.getElementById('uploadButton1');
    const profileImage = document.querySelector('.profile'); // 프로필 이미지 요소

    // "+" 버튼 클릭 시 파일 선택 창 열기
    uploadButton.addEventListener('click', () => {
        fileInput.click();
    });

    // 파일 선택 후 업로드 처리
    fileInput.addEventListener('change', async () => {
        if (fileInput.files.length === 0) {
            alert('파일을 선택해주세요!');
            return;
        }

        const file = fileInput.files[0];
        const allowedExtensions = ['jpg', 'jpeg', 'png'];
        const fileExtension = file.name.split('.').pop().toLowerCase();

        // 확장자 검사
        if (!allowedExtensions.includes(fileExtension)) {
            alert('JPG 또는 PNG 형식의 파일만 업로드 가능합니다!');
            fileInput.value = ''; // 파일 입력 초기화
            return;
        }

        // FileReader를 사용하여 이미지를 로컬에서 바로 갱신
        const reader = new FileReader();
        reader.onload = function(event) {
            profileImage.src = event.target.result; // 이미지를 로컬에서 읽어 프로필 이미지 갱신
        };
        reader.readAsDataURL(file); // 파일을 Data URL로 변환하여 읽기

        const idValue = document.querySelector('input[type="hidden"]').value;

        const formData = new FormData();
        formData.append('file', fileInput.files[0]); // 단일 파일 업로드
        formData.append('id', idValue);

        try {
            const response = await fetch('/uploadsprofile', { // 스프링 백엔드의 업로드 엔드포인트
                method: 'POST',
                body: formData,
            });

            if (response.ok) {
                // 업로드 성공 후 이미지 갱신
                const reader = new FileReader();
                reader.onload = function(event) {
                    profileImage.src = event.target.result; // 이미지를 로컬에서 읽어 프로필 이미지 갱신
                };
                reader.readAsDataURL(file); // 파일을 Data URL로 변환하여 읽기

                alert('프로필 사진 업로드 성공!');
            } else {
                alert('프로필 사진 업로드 실패!');
            }
        } catch (error) {
            alert('업로드 중 오류 발생!');
            console.error(error);
        }
    });
</script>
{{>footer}}